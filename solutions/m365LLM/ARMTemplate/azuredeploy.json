{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "AppId": {
            "type": "string",
            "metadata": {
                "description": "The id of the Azure AD Application that has access to the destination Azure Storage Account."
            }
        },
        "AppSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The secret for the Azure AD Application that has access to the destination Azure Storage Account."
            }
        }
    },
    "variables": {
        "destinationAdlsAccountName": "[concat('store', uniqueString(resourceGroup().id))]",
        "synapseStorageExternalId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Storage/storageAccounts/')]",
        "WorkspaceName": "[concat('synapse', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "ApplicationScript",
            "location": "[resourceGroup().location]",
            "kind": "AzurePowerShell",
            "properties": {
                "forceUpdateTag": "1",
                "azPowerShellVersion": "3.0",
                "environmentVariables": [
                {
                    "name":"AppSecret",
                    "secureValue": "[parameters('AppSecret')]"
                }
                ],
                "arguments": "[format(' -AppID {0} -TenantId {1} -AppToGet {2}', parameters('AppId'), subscription().tenantId, parameters('AppId'))]",
                "primaryScriptUri": "https://raw.githubusercontent.com/microsoftgraph/dataconnect-solutions/main/ARMTemplates/SupportScripts/GetServicePricipalId.ps1",
                "timeout": "PT30M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "dependsOn": []
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-09-01",
            "name": "[variables('destinationAdlsAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('destinationAdlsAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('destinationAdlsAccountName'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('destinationAdlsAccountName'), '/default/mgdc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('destinationAdlsAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('destinationAdlsAccountName'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "Container"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('destinationAdlsAccountName'), '/default/output')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('destinationAdlsAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('destinationAdlsAccountName'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "Container"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
            "apiVersion": "2018-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('destinationAdlsAccountName'), 'default', 'mgdc')]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('destinationAdlsAccountName'), 'default', 'output')]",
                "[resourceId('Microsoft.Resources/deploymentScripts','ApplicationScript')]"
            ],
            "name": "[concat(variables('destinationAdlsAccountName'),'/Microsoft.Authorization/',guid(subscription().id, deployment().name))]",
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference('ApplicationScript').outputs.PrincipalId]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers/providers/roleAssignments",
            "apiVersion": "2018-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('destinationAdlsAccountName'), 'default', 'mgdc')]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('destinationAdlsAccountName'), 'default', 'output')]"
            ],
            "name": "[concat(variables('destinationAdlsAccountName'), '/default/mgdc/Microsoft.Authorization/', guid(subscription().id, resourceGroup().id))]",
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[reference('ApplicationScript').outputs.PrincipalId]"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[variables('WorkspaceName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "resourceId": "[concat(variables('synapseStorageExternalId'), variables('destinationAdlsAccountName'))]",
                    "accountUrl": "[concat('https://', variables('destinationAdlsAccountName'), '.dfs.core.windows.net')]",
                    "filesystem": "[concat(variables('WorkspaceName'), 'fs')]"
                },
                "encryption": {},
                "connectivityEndpoints": {
                    "web": "[concat('https://web.azuresynapse.net?workspace=%2fsubscriptions%2f', subscription().subscriptionId,'%2fresourceGroups%2f',resourceGroup().id,'%2fproviders%2fMicrosoft.Synapse%2fworkspaces%2f', variables('WorkspaceName'))]",
                    "dev": "[concat('https://', variables('WorkspaceName'), '.dev.azuresynapse.net')]"
                },
                "managedResourceGroupName": "[concat('synapseworkspace-managedrg-', uniqueString(resourceGroup().id))]",
                "privateEndpointConnections": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('destinationAdlsAccountName'), 'default')]"
            ]
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "GrantSynapseAccessToStorage",
            "location": "[resourceGroup().location]",
            "kind": "AzurePowerShell",
            "properties": {
                "forceUpdateTag": "1",
                "azPowerShellVersion": "3.0",
                "environmentVariables": [
                {
                    "name":"AppSecret",
                    "secureValue": "[parameters('AppSecret')]"
                }
                ],
                "arguments": "[format(' -AppID {0} -TenantId {1} -ServicePrincipalName {2}', parameters('AppId'), subscription().tenantId, variables('WorkspaceName'))]",
                "primaryScriptUri": "https://raw.githubusercontent.com/microsoftgraph/dataconnect-solutions/main/ARMTemplates/SupportScripts/GetServicePricipalId.ps1",
                "timeout": "PT30M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D",
                "dependsOn": [
                    "[resourceId('Microsoft.Synapse/workspaces', variables('WorkspaceName'))]"
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
            "apiVersion": "2018-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('destinationAdlsAccountName'), 'default', 'mgdc')]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('destinationAdlsAccountName'), 'default', 'output')]",
                "[resourceId('Microsoft.Resources/deploymentScripts','GrantSynapseAccessToStorage')]"
            ],
            "name": "[concat(variables('destinationAdlsAccountName'),'/Microsoft.Authorization/',guid(subscription().id, deployment().name, resourceGroup().id))]",
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[reference('GrantSynapseAccessToStorage').outputs.PrincipalId]"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/auditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(variables('WorkspaceName'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('WorkspaceName'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/bigDataPools",
            "apiVersion": "2021-06-01",
            "name": "[concat(variables('WorkspaceName'), '/synapsepool')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('WorkspaceName'))]"
            ],
            "properties": {
                "creationDate": "2021-12-15T13:50:11.03Z",
                "sparkVersion": "3.1",
                "nodeCount": 0,
                "nodeSize": "Small",
                "nodeSizeFamily": "MemoryOptimized",
                "autoScale": {
                    "enabled": true,
                    "minNodeCount": 3,
                    "maxNodeCount": 10
                },
                "autoPause": {
                    "enabled": true,
                    "delayInMinutes": 15
                },
                "isComputeIsolationEnabled": false,
                "sessionLevelPackagesEnabled": true,
                "cacheSize": 0,
                "dynamicExecutorAllocation": {
                    "enabled": false
                },
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/extendedAuditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(variables('WorkspaceName'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('WorkspaceName'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/firewallRules",
            "apiVersion": "2021-06-01",
            "name": "[concat(variables('WorkspaceName'), '/allowAll')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('WorkspaceName'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
            }
        },
        {
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('WorkspaceName'), 'searchm365')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "ProjectType": "aoai-your-data-service"
            },
            "sku": {
                "name": "standard"
            },
            "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "Default",
                "publicNetworkAccess": "Enabled",
                "networkRuleSet": {
                    "ipRules": []
                },
                "encryptionWithCmk": {
                    "enforcement": "Unspecified"
                },
                "disableLocalAuth": false,
                "authOptions": {
                    "apiKeyOnly": {}
                }
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-05-01",
            "name": "[concat(variables('WorkspaceName'), 'AOAIm365')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S0"
            },
            "kind": "OpenAI",
            "properties": {
                "customSubDomainName": "azureopenai-m365llm",
                "publicNetworkAccess": "Enabled"
            }
        }
    ]
}
