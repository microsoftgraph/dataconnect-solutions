{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adf.name": {
            "type": "string",
            "metadata": {
                "description": "Data Factory name"
            },
            "defaultValue": "gdc-adf"
        },
        "keyvault.url": {
            "type": "string"
        },
        "storageAccount.endpoint": {
            "type": "string"
        },
        "testStorageAccount.endpoint": {
            "type": "string"
        },
        "m365Adf-reader.sp.clientId": {
            "type": "string"
        },
        "gdc-service.sp.clientId": {
            "type": "string"
        },
        "search-service.url": {
            "type": "string"
        },
        "pipeline_start_time": {
            "type": "string"
        },
        "adb.cluster_id": {
            "type": "string",
            "metadata": {
                "description": "Existing Databricks Cluster Id"
            },
            "defaultValue": "none"
        },
        "adb.workspace.url": {
            "type": "string",
            "metadata": {
                "description": "Databricks workspace url ,https://../"
            },
            "defaultValue": "none"
        },
        "m365.tenant_id": {
            "type": "string",
            "metadata": {
                "description": "Office365 tenant to export"
            }
        },
        "gdc-service.sp.adb.secret_scope": {
            "type": "string",
            "defaultValue": "gdc"
        },
        "gdc-service.sp.adb.secret_name": {
            "type": "string",
            "defaultValue": "gdc-service-principal-secret"
        },
        "email_pipeline_default_end_time": {
            "type": "string",
            "defaultValue": "[utcNow('yyyy-MM-ddTHH:mm:ssZ')]"
        },
        "pygraph_utils_library.name": {
            "type": "string"
        },
        "emails.backfill.time.span": {
            "type": "int"
        }
    },
    "variables": {
        "factoryId": "[resourceId('Microsoft.DataFactory/factories', parameters('adf.name'))]",
        "further_past_emails_trigger_time_span": "[if(greater(parameters('emails.backfill.time.span'), 7), parameters('emails.backfill.time.span'), 0)]",
        "past_week_emails_trigger_time_span": "[if(less(parameters('emails.backfill.time.span'), 7), parameters('emails.backfill.time.span'), 7)]"
    },
    "resources": [
        {
            "name": "[concat(parameters('adf.name'), '/keyvault_linkedservice')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('keyvault.url')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('adf.name'), '/blobstorage_linkedservice')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "serviceEndpoint": "[parameters('storageAccount.endpoint')]",
                    "accountKind": "StorageV2"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('adf.name'), '/sampledata_blobstorage')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "serviceEndpoint": "[parameters('testStorageAccount.endpoint')]",
                    "accountKind": "StorageV2"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/keyvault_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/blobstorage_via_sp_linkedservice')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "serviceEndpoint": "[parameters('storageAccount.endpoint')]",
                    "tenant": "[parameters('m365.tenant_id')]",
                    "servicePrincipalId": "[parameters('gdc-service.sp.clientId')]",
                    "servicePrincipalKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "keyvault_linkedservice",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "gdc-service-principal-secret"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/keyvault_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/office365_linkedservice')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "Office365",
                "typeProperties": {
                    "office365TenantId": "[parameters('m365.tenant_id')]",
                    "servicePrincipalTenantId": "[parameters('m365.tenant_id')]",
                    "servicePrincipalId": "[parameters('m365Adf-reader.sp.clientId')]",
                    "servicePrincipalKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "keyvault_linkedservice",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "gdc-m365-reader-secret"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/keyvault_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/databricks_linkedservice')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureDatabricks",
                "typeProperties": {
                    "domain": "[parameters('adb.workspace.url')]",
                    "accessToken": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "keyvault_linkedservice",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "gdc-databricks-token"
                    },
                    "existingClusterId": "[parameters('adb.cluster_id')]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/keyvault_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/azure_search_linkedservice')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSearch",
                "typeProperties": {
                    "url": "[parameters('search-service.url')]",
                    "key": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "keyvault_linkedservice",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "gdc-search-service-admin-key"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/keyvault_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/AzureSearchEmailsIndex')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_search_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "emailsIndexName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSearchIndex",
                "schema": [],
                "typeProperties": {
                    "indexName": {
                        "value": "@dataset().emailsIndexName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_search_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/M365_Manager')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "office365_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Office365Table",
                "schema": [],
                "typeProperties": {
                    "tableName": "BasicDataSet_v0.Manager_v0"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/office365_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/M365ManagerBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "blobstorage_via_sp_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "azbsContainer": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": "m365_managers",
                        "container": {
                            "value": "@dataset().azbsContainer",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_via_sp_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/SampleData_EmailBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "sampledata_blobstorage",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "azbsContainer": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": "m365_emails",
                        "container": {
                            "value": "@dataset().azbsContainer",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/sampledata_blobstorage')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/SampleData_UserProfileBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "sampledata_blobstorage",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "azbsContainer": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": "m365_users",
                        "container": {
                            "value": "@dataset().azbsContainer",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/sampledata_blobstorage')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/SampleData_ManagerBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "sampledata_blobstorage",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "azbsContainer": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": "m365_managers",
                        "container": {
                            "value": "@dataset().azbsContainer",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/sampledata_blobstorage')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/M365_User_Profile')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "office365_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Office365Table",
                "schema": [],
                "typeProperties": {
                    "tableName": "BasicDataSet_v0.User_v1"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/office365_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/M365UserProfileBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "blobstorage_via_sp_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "azbsContainer": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": "m365_users",
                        "container": {
                            "value": "@dataset().azbsContainer",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_via_sp_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/AzureSearchEmployeeIndex')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_search_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "employeesIndexName": {
                        "type": "string",
                        "defaultValue": "gdc-employees"
                    }
                },
                "annotations": [],
                "type": "AzureSearchIndex",
                "schema": [],
                "typeProperties": {
                    "indexName": {
                        "value": "@dataset().employeesIndexName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_search_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/EnrichedEmailsForIndexing')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "blobstorage_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "batchTimeBasedSubpath": {
                        "type": "string"
                    },
                    "azbsContainer": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": {
                            "value": "@{concat('enriched/', dataset().batchTimeBasedSubpath)}",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().azbsContainer",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "Content": {
                            "type": "string"
                        },
                        "Content_v2": {
                            "type": "string"
                        },
                        "Date": {
                            "type": "string"
                        },
                        "From": {
                            "type": "string"
                        },
                        "Subject": {
                            "type": "string"
                        },
                        "TargetUser": {
                            "type": "string"
                        },
                        "ToRecipients": {
                            "type": "string"
                        },
                        "actors": {
                            "type": "string"
                        },
                        "de_data_science": {
                            "type": "string"
                        },
                        "de_data_science_mapping": {
                            "type": "string"
                        },
                        "de_facilities": {
                            "type": "string"
                        },
                        "de_facilities_mapping": {
                            "type": "string"
                        },
                        "de_finance": {
                            "type": "string"
                        },
                        "de_finance_mapping": {
                            "type": "string"
                        },
                        "de_healthcare": {
                            "type": "string"
                        },
                        "de_healthcare_mapping": {
                            "type": "string"
                        },
                        "de_human_relations": {
                            "type": "string"
                        },
                        "de_human_relations_mapping": {
                            "type": "string"
                        },
                        "de_legal": {
                            "type": "string"
                        },
                        "de_legal_mapping": {
                            "type": "string"
                        },
                        "de_oilgas": {
                            "type": "string"
                        },
                        "de_oilgas_mapping": {
                            "type": "string"
                        },
                        "de_sales_marketing": {
                            "type": "string"
                        },
                        "de_sales_marketing_mapping": {
                            "type": "string"
                        },
                        "de_software": {
                            "type": "string"
                        },
                        "de_software_mapping": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "internet_message_id": {
                            "type": "string"
                        },
                        "lemma_body": {
                            "type": "string"
                        },
                        "mail_id": {
                            "type": "string"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/EnrichedEmployeesForIndexing')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "blobstorage_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "azbsContainer": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": "enriched_employee_profiles",
                        "container": {
                            "value": "@dataset().azbsContainer",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "mail": {
                            "type": "string"
                        },
                        "about_me": {
                            "type": "string"
                        },
                        "about_me_lemma": {
                            "type": "string"
                        },
                        "about_me_v2": {
                            "type": "string"
                        },
                        "city": {
                            "type": "string"
                        },
                        "company_name": {
                            "type": "string"
                        },
                        "country": {
                            "type": "string"
                        },
                        "currated_all": {
                            "type": "string"
                        },
                        "de_data_science": {
                            "type": "string"
                        },
                        "de_data_science_mapping": {
                            "type": "string"
                        },
                        "de_facilities": {
                            "type": "string"
                        },
                        "de_facilities_mapping": {
                            "type": "string"
                        },
                        "de_finance": {
                            "type": "string"
                        },
                        "de_finance_mapping": {
                            "type": "string"
                        },
                        "de_healthcare": {
                            "type": "string"
                        },
                        "de_healthcare_mapping": {
                            "type": "string"
                        },
                        "de_human_relations": {
                            "type": "string"
                        },
                        "de_human_relations_mapping": {
                            "type": "string"
                        },
                        "de_legal": {
                            "type": "string"
                        },
                        "de_legal_mapping": {
                            "type": "string"
                        },
                        "de_oilgas": {
                            "type": "string"
                        },
                        "de_oilgas_mapping": {
                            "type": "string"
                        },
                        "de_sales_marketing": {
                            "type": "string"
                        },
                        "de_sales_marketing_mapping": {
                            "type": "string"
                        },
                        "de_software": {
                            "type": "string"
                        },
                        "de_software_mapping": {
                            "type": "string"
                        },
                        "department": {
                            "type": "string"
                        },
                        "display_name": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "job_title": {
                            "type": "string"
                        },
                        "job_title_v2": {
                            "type": "string"
                        },
                        "office_location": {
                            "type": "string"
                        },
                        "responsibilities": {
                            "type": "string"
                        },
                        "responsibilities_lemma": {
                            "type": "string"
                        },
                        "responsibilities_v2": {
                            "type": "string"
                        },
                        "skills": {
                            "type": "string"
                        },
                        "skills_lemma": {
                            "type": "string"
                        },
                        "skills_v2": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "hr_data_name": {
                            "type": "string"
                        },
                        "hr_data_location": {
                            "type": "string"
                        },
                        "hr_data_current_engagement": {
                            "type": "string"
                        },
                        "hr_data_manager_name": {
                            "type": "string"
                        },
                        "hr_data_role": {
                            "type": "string"
                        },
                        "hr_data_available_starting_from": {
                            "type": "string"
                        },
                        "hr_data_manager_email": {
                            "type": "string"
                        },
                        "hr_data_linkedin_profile": {
                            "type": "string"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/M365EmailsBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "blobstorage_via_sp_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "batchTimeBasedSubpath": {
                        "type": "string"
                    },
                    "azbsContainer": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": {
                            "value": "@{concat('m365_emails/', dataset().batchTimeBasedSubpath)}",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().azbsContainer",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_via_sp_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/M365_Emails')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "office365_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Office365Table",
                "schema": [],
                "typeProperties": {
                    "tableName": "BasicDataSet_v0.Message_v0"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/office365_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/M365EmailsParentBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "blobstorage_via_sp_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "azbsContainer": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": "m365_emails",
                        "container": {
                            "value": "@dataset().azbsContainer",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_via_sp_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/DeduplicatedEmailsParentBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "blobstorage_via_sp_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "azbsContainer": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": "deduplicated",
                        "container": {
                            "value": "@dataset().azbsContainer",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_via_sp_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/EnrichedEmailsParentBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "blobstorage_via_sp_linkedservice",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "azbsContainer": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": "enriched",
                        "container": {
                            "value": "@dataset().azbsContainer",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_via_sp_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/AirtableToHRDataPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ConvertAirtableToHRData",
                        "type": "Switch",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "on": {
                                "value": "@pipeline().globalParameters.gdc_data_ingestion_mode",
                                "type": "Expression"
                            },
                            "cases": [
                                {
                                    "value": "sample_mode",
                                    "activities": [
                                        {
                                            "name": "AirtableSampleDataToHRData",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "ConvertAirtableToHRData",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "inputStorageAccountName": {
                                                        "value": "@pipeline().globalParameters.gdc_azbs_demodata_storage_account",
                                                        "type": "Expression"
                                                    },
                                                    "inputContainer": "sample-data",
                                                    "inputFolderPath": "airtable",
                                                    "outputStorageAccountName": {
                                                        "value": "@pipeline().globalParameters.gdc_azbs_demodata_storage_account",
                                                        "type": "Expression"
                                                    },
                                                    "outputContainer": "sample-data",
                                                    "outputFolderPath": "hr_data"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "production_mode",
                                    "activities": [
                                        {
                                            "name": "AirtableToHRData",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "ConvertAirtableToHRData",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "inputStorageAccountName": "",
                                                    "inputContainer": "",
                                                    "inputFolderPath": "",
                                                    "outputStorageAccountName": {
                                                        "value": "@pipeline().globalParameters.gdc_azbs_demodata_storage_account",
                                                        "type": "Expression"
                                                    },
                                                    "outputContainer": "production-data",
                                                    "outputFolderPath": "hr_data"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "simulated_mode",
                                    "activities": [
                                        {
                                            "name": "AirtableSimulatedDataToHRData",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "ConvertAirtableToHRData",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "inputStorageAccountName": {
                                                        "value": "@pipeline().globalParameters.gdc_azbs_demodata_storage_account",
                                                        "type": "Expression"
                                                    },
                                                    "inputContainer": "simulated-data",
                                                    "inputFolderPath": "airtable",
                                                    "outputStorageAccountName": {
                                                        "value": "@pipeline().globalParameters.gdc_azbs_demodata_storage_account",
                                                        "type": "Expression"
                                                    },
                                                    "outputContainer": "simulated-data",
                                                    "outputFolderPath": "hr_data",
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "folder": {
                    "name": "AirtableToHRData"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ConvertAirtableToHRData')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/ConvertAirtableToHRData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ConvertAirtableToHRData",
                        "type": "DatabricksSparkJar",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "mainClassName": "com.microsoft.graphdataconnect.skillsfinder.airtable.AirtableToHRData",
                            "parameters": [
                                "--application-id",
                                "@pipeline().globalParameters.gdc_app_registration_application_id",
                                "--directory-id",
                                "@pipeline().globalParameters.gdc_app_registration_directory_id",
                                "--adb-secret-scope-name",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--adb-sp-client-key-secret-name",
                                "[parameters('gdc-service.sp.adb.secret_name')]",
                                "--key-vault-url",
                                "@pipeline().globalParameters.gdc_key_vault_url",
                                "--airtable-base-key-name",
                                "airtable-base-key",
                                "--airtable-api-key-name",
                                "airtable-api-key",
                                "--input-storage-account-name",
                                "@pipeline().parameters.inputStorageAccountName",
                                "--input-container",
                                "@pipeline().parameters.inputContainer",
                                "--input-folder-path",
                                "@pipeline().parameters.inputFolderPath",
                                "--output-storage-account-name",
                                "@pipeline().parameters.outputStorageAccountName",
                                "--output-container",
                                "@pipeline().parameters.outputContainer",
                                "--output-folder-path",
                                "@pipeline().parameters.outputFolderPath",
                                "--log-analytics-workspace-id",
                                "@pipeline().globalParameters.gdc_log_analytics_workspace_id",
                                "--log-analytics-workspace-key-name",
                                "log-analytics-api-key",
                                "--ingestion-mode",
                                "@pipeline().globalParameters.gdc_data_ingestion_mode",
                                "--fail-fast-on-corrupt-data",
                                "false"
                            ],
                            "libraries": [
                                {
                                    "jar": "dbfs:/mnt/gdc-artifacts/airtable-to-hr-data.jar"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "databricks_linkedservice",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "inputStorageAccountName": {
                        "type": "string"
                    },
                    "inputContainer": {
                        "type": "string"
                    },
                    "inputFolderPath": {
                        "type": "string"
                    },
                    "outputStorageAccountName": {
                        "type": "string"
                    },
                    "outputContainer": {
                        "type": "string"
                    },
                    "outputFolderPath": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "AirtableToHRData/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/databricks_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/emailEnrichment')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "emailEnrichmentProcessor",
                        "type": "DatabricksSparkPython",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pythonFile": "dbfs:/mnt/gdc-artifacts/mail_enrichment_processor.py",
                            "parameters": [
                                "--storage-account-name",
                                "@pipeline().globalParameters.gdc_azbs_storage_account",
                                "--output-container-name",
                                "@pipeline().globalParameters.gdc_emails_azbs_container",
                                "--output-folder-path",
                                "@{concat('enriched/', pipeline().parameters.batchTimeBasedSubpath)}",
                                "--input-container-name",
                                "@pipeline().globalParameters.gdc_emails_azbs_container",
                                "--input-folder-path",
                                "@{concat('deduplicated/', pipeline().parameters.batchTimeBasedSubpath)}",
                                "--domain-expert-container-name",
                                "@pipeline().globalParameters.gdc_domain_experts_azbs_container",
                                "--domain-expert-folder-path",
                                "domain_experts",
                                "--domain-expert-file-name",
                                "so_domain_expert.bin",
                                "--application-id",
                                "@pipeline().globalParameters.gdc_app_registration_application_id",
                                "--directory-id",
                                "@pipeline().globalParameters.gdc_app_registration_directory_id",
                                "--adb-secret-scope-name",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--adb-sp-client-key-secret-name",
                                "[parameters('gdc-service.sp.adb.secret_name')]",
                                "--log-analytics-workspace-id",
                                "@pipeline().globalParameters.gdc_log_analytics_workspace_id",
                                "--log-analytics-workspace-key-name",
                                "log-analytics-api-key",
                                "--key-vault-url",
                                "@pipeline().globalParameters.gdc_key_vault_url"
                            ],
                            "libraries": [
                                {
                                    "pypi": {
                                        "package": "azure-core==1.9.0"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "azure-identity==1.4.1"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "azure-keyvault-secrets==4.2.0"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "azure-storage-blob==12.7.0"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "nltk==3.5"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "numpy==1.19.1"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "spacy==2.3.1"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "gensim==3.8.0"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "spacy-lookups-data==0.3.2"
                                    }
                                },
                                {
                                    "whl": "[concat('dbfs:/mnt/gdc-artifacts/',parameters('pygraph_utils_library.name'))]"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "databricks_linkedservice",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "batchTimeBasedSubpath": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "M365Emails/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/databricks_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/buildEmployeeProfileAndExportToAzureSql')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "m365EmployeeToAzureSql",
                        "type": "DatabricksSparkJar",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "mainClassName": "com.microsoft.graphdataconnect.skillsfinder.userdetails.Runner",
                            "parameters": [
                                "--application-id",
                                "@pipeline().globalParameters.gdc_app_registration_application_id",
                                "--directory-id",
                                "@pipeline().globalParameters.gdc_app_registration_directory_id",
                                "--adb-secret-scope-name",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--adb-sp-client-key-secret-name",
                                "[parameters('gdc-service.sp.adb.secret_name')]",
                                "--jdbc-hostname",
                                "@pipeline().globalParameters.gdc_azure_sql_server_name",
                                "--jdbc-port",
                                "1433",
                                "--jdbc-database",
                                "@pipeline().globalParameters.gdc_azure_sql_database",
                                "--storage-account-name",
                                "@pipeline().globalParameters.gdc_azbs_storage_account",
                                "--input-container",
                                "@pipeline().globalParameters.gdc_employee_profiles_azbs_container",
                                "--users-input-folder-path",
                                "m365_users",
                                "--max-db-connections",
                                "8",
                                "--graph-api-tenant-id",
                                "@pipeline().globalParameters.gdc_graph_api_app_registration_directory_id",
                                "--graph-api-client-id",
                                "@pipeline().globalParameters.gdc_graph_api_app_registration_application_id",
                                "--graph-api-secret-scope",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--graph-api-sp-client-key-secret-name",
                                "graph-api-service-principal-secret",
                                "--managers-input-folder-path",
                                "m365_managers",
                                "--log-analytics-workspace-id",
                                "@pipeline().globalParameters.gdc_log_analytics_workspace_id",
                                "--log-analytics-workspace-key-name",
                                "log-analytics-api-key",
                                "--key-vault-url",
                                "@pipeline().globalParameters.gdc_key_vault_url",
                                "--ingestion-mode",
                                "@pipeline().globalParameters.gdc_data_ingestion_mode",
                                "--use-msi-azure-sql-auth",
                                "@pipeline().globalParameters.gdc_azure_sql_msi_auth_enabled",
                                "--jdbc-username-key-name",
                                "azure-sql-backend-user",
                                "--jdbc-password-key-name",
                                "azure-sql-backend-password"
                            ],
                            "libraries": [
                                {
                                    "jar": "dbfs:/mnt/gdc-artifacts/m365-user-to-azure-sql.jar"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "databricks_linkedservice",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "folder": {
                    "name": "EmployeeProfile/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/databricks_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/deleteOldM365ManagerBlobData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "deleteOldM365ManagerBlobData",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "M365ManagerBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_employee_profiles_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "logStorageSettings": {
                                "linkedServiceName": {
                                    "referenceName": "blobstorage_linkedservice",
                                    "type": "LinkedServiceReference"
                                },
                                "path": {
                                    "value": "@concat('logs/End2EndEmployeeProfilePipeline/', pipeline().RunId, '/cleanup-logs/', pipeline().Pipeline)",
                                    "type": "Expression"
                                }
                            },
                            "enableLogging": true,
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true
                            }
                        }
                    }
                ],
                "folder": {
                    "name": "EmployeeProfile/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/M365ManagerBlob')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/deleteOldM365UserBlobData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "deleteOldM365UserBlobData",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "M365UserProfileBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_employee_profiles_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "logStorageSettings": {
                                "linkedServiceName": {
                                    "referenceName": "blobstorage_linkedservice",
                                    "type": "LinkedServiceReference"
                                },
                                "path": {
                                    "value": "@concat('logs/End2EndEmployeeProfilePipeline/', pipeline().RunId, '/cleanup-logs/', pipeline().Pipeline)",
                                    "type": "Expression"
                                }
                            },
                            "enableLogging": true,
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true
                            }
                        }
                    }
                ],
                "folder": {
                    "name": "EmployeeProfile/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/M365UserProfileBlob')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/enrichEmployeeProfile')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "enrichEmployeeProfile",
                        "description": "Performs the enrichment process on the data from the given input path, then clears the output of previous runs and then writes the result of the current run.",
                        "type": "DatabricksSparkPython",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pythonFile": "dbfs:/mnt/gdc-artifacts/profiles_enrichment_processor.py",
                            "parameters": [
                                "--storage-account-name",
                                "@pipeline().globalParameters.gdc_azbs_storage_account",
                                "--output-container-name",
                                "@pipeline().globalParameters.gdc_employee_profiles_azbs_container",
                                "--output-folder-path",
                                "enriched_employee_profiles",
                                "--domain-expert-container-name",
                                "@pipeline().globalParameters.gdc_domain_experts_azbs_container",
                                "--domain-expert-folder-path",
                                "domain_experts",
                                "--domain-expert-file-name",
                                "so_domain_expert.bin",
                                "--jdbc-host",
                                "@pipeline().globalParameters.gdc_azure_sql_server_name",
                                "--jdbc-port",
                                "1433",
                                "--application-id",
                                "@pipeline().globalParameters.gdc_app_registration_application_id",
                                "--directory-id",
                                "@pipeline().globalParameters.gdc_app_registration_directory_id",
                                "--adb-secret-scope-name",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--adb-sp-client-key-secret-name",
                                "[parameters('gdc-service.sp.adb.secret_name')]",
                                "--jdbc-database",
                                "@pipeline().globalParameters.gdc_azure_sql_database",
                                "--log-analytics-workspace-id",
                                "@pipeline().globalParameters.gdc_log_analytics_workspace_id",
                                "--log-analytics-workspace-key-name",
                                "log-analytics-api-key",
                                "--key-vault-url",
                                "@pipeline().globalParameters.gdc_key_vault_url",
                                "--jdbc-username-key-name",
                                "azure-sql-backend-user",
                                "--jdbc-password-key-name",
                                "azure-sql-backend-password",
                                "--use-msi-azure-sql-auth",
                                "@pipeline().globalParameters.gdc_azure_sql_msi_auth_enabled"
                            ],
                            "libraries": [
                                {
                                    "pypi": {
                                        "package": "azure-identity==1.4.1"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "azure-keyvault-secrets==4.2.0"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "azure-storage-blob==12.7.0"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "adal==1.2.5"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "nltk==3.5"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "numpy==1.19.1"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "spacy==2.3.1"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "gensim==3.8.0"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "spacy-lookups-data==0.3.2"
                                    }
                                },
                                {
                                    "whl": "[concat('dbfs:/mnt/gdc-artifacts/',parameters('pygraph_utils_library.name'))]"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "databricks_linkedservice",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "folder": {
                    "name": "EmployeeProfile/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/databricks_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/ImportHRDataIntoSql')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ImportHRDataIntoSql",
                        "type": "DatabricksSparkJar",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "mainClassName": "com.microsoft.graphdataconnect.skillsfinder.hrdata.CopyHRDataToDatabase",
                            "parameters": [
                                "--application-id",
                                "@pipeline().globalParameters.gdc_app_registration_application_id",
                                "--directory-id",
                                "@pipeline().globalParameters.gdc_app_registration_directory_id",
                                "--adb-secret-scope-name",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--adb-sp-client-key-secret-name",
                                "[parameters('gdc-service.sp.adb.secret_name')]",
                                "--key-vault-url",
                                "@pipeline().globalParameters.gdc_key_vault_url",
                                "--input-storage-account-name",
                                "@pipeline().parameters.storageAccountName",
                                "--input-container",
                                "@pipeline().parameters.inputContainer",
                                "--input-folder-path",
                                "@pipeline().parameters.inputFolderPath",
                                "--jdbc-hostname",
                                "@pipeline().globalParameters.gdc_azure_sql_server_name",
                                "--jdbc-port",
                                "1433",
                                "--jdbc-database",
                                "@pipeline().globalParameters.gdc_azure_sql_database",
                                "--jdbc-username-key-name",
                                "azure-sql-backend-user",
                                "--jdbc-password-key-name",
                                "azure-sql-backend-password",
                                "--use-msi-azure-sql-auth",
                                "@pipeline().globalParameters.gdc_azure_sql_msi_auth_enabled",
                                "--max-db-connections",
                                "8",
                                "--log-analytics-workspace-id",
                                "@pipeline().globalParameters.gdc_log_analytics_workspace_id",
                                "--log-analytics-workspace-key-name",
                                "log-analytics-api-key",
                                "--ingestion-mode",
                                "@pipeline().globalParameters.gdc_data_ingestion_mode",
                                "--fail-fast-on-corrupt-data",
                                "false"
                            ],
                            "libraries": [
                                {
                                    "jar": "dbfs:/mnt/gdc-artifacts/hr-data-to-azure-sql.jar"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "databricks_linkedservice",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "inputContainer": {
                        "type": "string"
                    },
                    "inputFolderPath": {
                        "type": "string"
                    },
                    "storageAccountName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "EmployeeProfile/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/databricks_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/End2EndMailsToRolesPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "MailsToRoleDetection",
                        "type": "DatabricksSparkPython",
                        "dependsOn": [
                            {
                                "activity": "SetNewInferredRolesVersion",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pythonFile": "dbfs:/mnt/gdc-artifacts/mail_role_detection_taxo.py",
                            "parameters": [
                                "--storage-account-name",
                                "@pipeline().globalParameters.gdc_azbs_storage_account",
                                "--input-container-name",
                                "@pipeline().globalParameters.gdc_emails_azbs_container",
                                "--input-folder-path",
                                "deduplicated",
                                "--application-id",
                                "@pipeline().globalParameters.gdc_app_registration_application_id",
                                "--directory-id",
                                "@pipeline().globalParameters.gdc_app_registration_directory_id",
                                "--adb-secret-scope-name",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--adb-sp-client-key-secret-name",
                                "gdc-service-principal-secret",
                                "--domain-expert-container-name",
                                "@pipeline().globalParameters.gdc_domain_experts_azbs_container",
                                "--taxonomy-folder",
                                "domain_experts/taxo",
                                "--taxonomy-file",
                                "taxo_v3_k50_n123456.dill.gz",
                                "--fse-folder",
                                "domain_experts/fse",
                                "--fse-file",
                                "gensim-fse-m1-s300-w3-mn5-i20_v2.dill.gz",
                                "--log-analytics-workspace-id",
                                "@pipeline().globalParameters.gdc_log_analytics_workspace_id",
                                "--log-analytics-workspace-key-name",
                                "log-analytics-api-key",
                                "--key-vault-url",
                                "@pipeline().globalParameters.gdc_key_vault_url",
                                "--jdbc-host",
                                "@pipeline().globalParameters.gdc_azure_sql_server_name",
                                "--jdbc-port",
                                "1433",
                                "--jdbc-database",
                                "@pipeline().globalParameters.gdc_azure_sql_database",
                                "--new-data-version",
                                "@variables('newInferredRolesVersion')",
                                "--jdbc-username-key-name",
                                "azure-sql-backend-user",
                                "--jdbc-password-key-name",
                                "azure-sql-backend-password",
                                "--use-msi-azure-sql-auth",
                                "@pipeline().globalParameters.gdc_azure_sql_msi_auth_enabled"
                            ],
                            "libraries": [
                                {
                                    "pypi": {
                                        "package": "azure-identity==1.4.1"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "azure-keyvault-secrets==4.2.0"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "azure-storage-blob==12.7.0"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "dill==0.3.3"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "nltk==3.5"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "numpy==1.19.1"
                                    }
                                },
                                {
                                    "whl": "[concat('dbfs:/mnt/gdc-artifacts/',parameters('pygraph_utils_library.name'))]"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "databricks_linkedservice",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "SetNewInferredRolesVersion",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "newInferredRolesVersion",
                            "value": {
                                "value": "@utcnow('yyyy-MM-dd HH:mm:ss.ffffff')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "UpdateAzureSqlDataVersion",
                        "type": "DatabricksSparkJar",
                        "dependsOn": [
                            {
                                "activity": "MailsToRoleDetection",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "mainClassName": "com.microsoft.graphdataconnect.skillsfinder.updatedataversion.job.UpdateAzureSqlDataVersionJob",
                            "parameters": [
                                "--new-data-version",
                                "@variables('newInferredRolesVersion')",
                                "--application-id",
                                "@pipeline().globalParameters.gdc_app_registration_application_id",
                                "--directory-id",
                                "@pipeline().globalParameters.gdc_app_registration_directory_id",
                                "--adb-secret-scope-name",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--adb-sp-client-key-secret-name",
                                "gdc-service-principal-secret",
                                "--jdbc-hostname",
                                "@pipeline().globalParameters.gdc_azure_sql_server_name",
                                "--jdbc-port",
                                "1433",
                                "--jdbc-database",
                                "@pipeline().globalParameters.gdc_azure_sql_database",
                                "--key-vault-url",
                                "@pipeline().globalParameters.gdc_key_vault_url",
                                "--log-analytics-workspace-id",
                                "@pipeline().globalParameters.gdc_log_analytics_workspace_id",
                                "--log-analytics-workspace-key-name",
                                "log-analytics-api-key",
                                "--jdbc-username-key-name",
                                "azure-sql-backend-user",
                                "--jdbc-password-key-name",
                                "azure-sql-backend-password",
                                "--use-msi-azure-sql-auth",
                                "@pipeline().globalParameters.gdc_azure_sql_msi_auth_enabled",
                                "--configuration-type",
                                "LatestVersionOfInferredRoles",
                                "--table-name",
                                "inferred_roles"
                            ],
                            "libraries": [
                                {
                                    "jar": "dbfs:/mnt/gdc-artifacts/update-azure-sql-data-version.jar"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "databricks_linkedservice",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "variables": {
                    "newInferredRolesVersion": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "MailsRolesDetection"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/databricks_linkedservice')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/exportEmailsToAzureSearch')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "exportEmailsToAzureSearch",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ThereIsContentToExport",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@{concat('enriched/', pipeline().parameters.batchTimeBasedSubpath)}",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*.json"
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSearchIndexSink",
                                "writeBatchSize": 1000,
                                "writeBehavior": "merge"
                            },
                            "enableStaging": false,
                            "validateDataConsistency": true,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Info",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "blobstorage_linkedservice",
                                        "type": "LinkedServiceReference"
                                    },
                                    "path": {
                                        "value": "@concat('logs/End2EndEmailsPipeline/', pipeline().RunId)",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "$['Content']"
                                        },
                                        "sink": {
                                            "name": "Content",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['Content_v2']"
                                        },
                                        "sink": {
                                            "name": "Content_v2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['Date']"
                                        },
                                        "sink": {
                                            "name": "Date",
                                            "type": "DateTimeOffset"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['From']"
                                        },
                                        "sink": {
                                            "name": "From",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['Subject']"
                                        },
                                        "sink": {
                                            "name": "Subject",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['TargetUser']"
                                        },
                                        "sink": {
                                            "name": "TargetUser",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['ToRecipients']"
                                        },
                                        "sink": {
                                            "name": "ToRecipients",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['actors']"
                                        },
                                        "sink": {
                                            "name": "actors",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_data_science']"
                                        },
                                        "sink": {
                                            "name": "de_data_science",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_data_science_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_data_science_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_facilities']"
                                        },
                                        "sink": {
                                            "name": "de_facilities",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_facilities_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_facilities_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_finance']"
                                        },
                                        "sink": {
                                            "name": "de_finance",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_finance_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_finance_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_healthcare']"
                                        },
                                        "sink": {
                                            "name": "de_healthcare",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_healthcare_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_healthcare_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_human_relations']"
                                        },
                                        "sink": {
                                            "name": "de_human_relations",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_human_relations_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_human_relations_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_legal']"
                                        },
                                        "sink": {
                                            "name": "de_legal",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_legal_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_legal_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_oilgas']"
                                        },
                                        "sink": {
                                            "name": "de_oilgas",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_oilgas_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_oilgas_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_sales_marketing']"
                                        },
                                        "sink": {
                                            "name": "de_sales_marketing",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_sales_marketing_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_sales_marketing_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_software']"
                                        },
                                        "sink": {
                                            "name": "de_software",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_software_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_software_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['internet_message_id']"
                                        },
                                        "sink": {
                                            "name": "internet_message_id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['lemma_body']"
                                        },
                                        "sink": {
                                            "name": "lemma_body",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['mail_id']"
                                        },
                                        "sink": {
                                            "name": "mail_id",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "EnrichedEmailsForIndexing",
                                "type": "DatasetReference",
                                "parameters": {
                                    "batchTimeBasedSubpath": {
                                        "value": "@pipeline().parameters.batchTimeBasedSubpath",
                                        "type": "Expression"
                                    },
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_emails_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "AzureSearchEmailsIndex",
                                "type": "DatasetReference",
                                "parameters": {
                                    "emailsIndexName": {
                                        "value": "@concat(pipeline().globalParameters.gdc_azure_search_index_prefix,'-emails')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ThereIsContentToExport",
                        "type": "Validation",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "EnrichedEmailsForIndexing",
                                "type": "DatasetReference",
                                "parameters": {
                                    "batchTimeBasedSubpath": {
                                        "value": "@pipeline().parameters.batchTimeBasedSubpath",
                                        "type": "Expression"
                                    },
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_emails_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "timeout": "0.00:00:05",
                            "sleep": 2,
                            "childItems": true
                        }
                    },
                    {
                        "name": "Do nothing",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "ThereIsContentToExport",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            },
                            {
                                "activity": "exportEmailsToAzureSearch",
                                "dependencyConditions": [
                                    "Skipped"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 1
                        }
                    }
                ],
                "parameters": {
                    "batchTimeBasedSubpath": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "M365Emails/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/EnrichedEmailsForIndexing')]",
                "[concat(variables('factoryId'), '/datasets/AzureSearchEmailsIndex')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/exportEmployeeToAzureSearch')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "createAzSearchEmployeesIndex",
                        "type": "DatabricksSparkPython",
                        "dependsOn": [
                            {
                                "activity": "SetEmployeesIndexName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pythonFile": "dbfs:/mnt/gdc-artifacts/create_azure_search_index.py",
                            "parameters": [
                                "--new-azure-search-index-name",
                                "@variables('employeesIndexName')",
                                "--azure-search-endpoint",
                                "@pipeline().globalParameters.gdc_azure_search_url",
                                "--index-definition-storage-account-name",
                                "@pipeline().globalParameters.gdc_azbs_storage_account",
                                "--index-definition-container-name",
                                "@pipeline().globalParameters.gdc_deployment_artifacts_azbs_container",
                                "--index-definition-file-path",
                                "schema/indexes/azure_employees_index_definition.json",
                                "--application-id",
                                "@pipeline().globalParameters.gdc_app_registration_application_id",
                                "--directory-id",
                                "@pipeline().globalParameters.gdc_app_registration_directory_id",
                                "--adb-secret-scope-name",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--adb-sp-client-key-secret-name",
                                "[parameters('gdc-service.sp.adb.secret_name')]",
                                "--log-analytics-workspace-id",
                                "@pipeline().globalParameters.gdc_log_analytics_workspace_id",
                                "--log-analytics-workspace-key-name",
                                "log-analytics-api-key",
                                "--key-vault-url",
                                "@pipeline().globalParameters.gdc_key_vault_url",
                                "--azure-search-admin-key-name",
                                "gdc-search-service-admin-key"
                            ],
                            "libraries": [
                                {
                                    "pypi": {
                                        "package": "azure-identity==1.4.1"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "azure-keyvault-secrets==4.2.0"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "azure-storage-blob==12.7.0"
                                    }
                                },
                                {
                                    "whl": "[concat('dbfs:/mnt/gdc-artifacts/',parameters('pygraph_utils_library.name'))]"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "databricks_linkedservice",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "exportEmployeeToAzureSearch",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "createAzSearchEmployeesIndex",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": "enriched_employee_profiles",
                                    "wildcardFileName": "*.json"
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSearchIndexSink",
                                "writeBatchSize": 1000,
                                "writeBehavior": "upload"
                            },
                            "enableStaging": false,
                            "validateDataConsistency": true,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Info",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "blobstorage_linkedservice",
                                        "type": "LinkedServiceReference"
                                    },
                                    "path": {
                                        "value": "@concat('logs/End2EndEmployeeProfilePipeline/', pipeline().RunId)",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "$['mail']"
                                        },
                                        "sink": {
                                            "name": "mail",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['about_me']"
                                        },
                                        "sink": {
                                            "name": "about_me",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['about_me_lemma']"
                                        },
                                        "sink": {
                                            "name": "about_me_lemma",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['about_me_v2']"
                                        },
                                        "sink": {
                                            "name": "about_me_v2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['city']"
                                        },
                                        "sink": {
                                            "name": "city",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['company_name']"
                                        },
                                        "sink": {
                                            "name": "company_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['country']"
                                        },
                                        "sink": {
                                            "name": "country",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['currated_all']"
                                        },
                                        "sink": {
                                            "name": "currated_all",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_data_science']"
                                        },
                                        "sink": {
                                            "name": "de_data_science",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_data_science_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_data_science_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_facilities']"
                                        },
                                        "sink": {
                                            "name": "de_facilities",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_facilities_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_facilities_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_finance']"
                                        },
                                        "sink": {
                                            "name": "de_finance",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_finance_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_finance_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_healthcare']"
                                        },
                                        "sink": {
                                            "name": "de_healthcare",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_healthcare_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_healthcare_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_human_relations']"
                                        },
                                        "sink": {
                                            "name": "de_human_relations",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_human_relations_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_human_relations_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_legal']"
                                        },
                                        "sink": {
                                            "name": "de_legal",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_legal_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_legal_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_oilgas']"
                                        },
                                        "sink": {
                                            "name": "de_oilgas",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_oilgas_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_oilgas_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_sales_marketing']"
                                        },
                                        "sink": {
                                            "name": "de_sales_marketing",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_sales_marketing_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_sales_marketing_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_software']"
                                        },
                                        "sink": {
                                            "name": "de_software",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['de_software_mapping']"
                                        },
                                        "sink": {
                                            "name": "de_software_mapping",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['department']"
                                        },
                                        "sink": {
                                            "name": "department",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['display_name']"
                                        },
                                        "sink": {
                                            "name": "display_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['job_title']"
                                        },
                                        "sink": {
                                            "name": "job_title",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['job_title_v2']"
                                        },
                                        "sink": {
                                            "name": "job_title_v2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['office_location']"
                                        },
                                        "sink": {
                                            "name": "office_location",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['responsibilities']"
                                        },
                                        "sink": {
                                            "name": "responsibilities",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['responsibilities_lemma']"
                                        },
                                        "sink": {
                                            "name": "responsibilities_lemma",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['responsibilities_v2']"
                                        },
                                        "sink": {
                                            "name": "responsibilities_v2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['skills']"
                                        },
                                        "sink": {
                                            "name": "skills",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['skills_lemma']"
                                        },
                                        "sink": {
                                            "name": "skills_lemma",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['skills_v2']"
                                        },
                                        "sink": {
                                            "name": "skills_v2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['state']"
                                        },
                                        "sink": {
                                            "name": "state",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['hr_data_name']"
                                        },
                                        "sink": {
                                            "name": "hr_data_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['hr_data_location']"
                                        },
                                        "sink": {
                                            "name": "hr_data_location",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['hr_data_available_starting_from']"
                                        },
                                        "sink": {
                                            "name": "hr_data_available_starting_from",
                                            "type": "DateTimeOffset"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['hr_data_current_engagement']"
                                        },
                                        "sink": {
                                            "name": "hr_data_current_engagement",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['hr_data_manager_name']"
                                        },
                                        "sink": {
                                            "name": "hr_data_manager_name",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['hr_data_manager_email']"
                                        },
                                        "sink": {
                                            "name": "hr_data_manager_email",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['hr_data_role']"
                                        },
                                        "sink": {
                                            "name": "hr_data_role",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['hr_data_linkedin_profile']"
                                        },
                                        "sink": {
                                            "name": "hr_data_linkedin_profile",
                                            "type": "String"
                                        }
                                    }
                                ],
                                "collectionReference": ""
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "EnrichedEmployeesForIndexing",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_employee_profiles_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "AzureSearchEmployeeIndex",
                                "type": "DatasetReference",
                                "parameters": {
                                    "employeesIndexName": {
                                        "value": "@variables('employeesIndexName')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "replaceCurrentEmployeeIndex",
                        "type": "DatabricksSparkJar",
                        "dependsOn": [
                            {
                                "activity": "exportEmployeeToAzureSearch",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "mainClassName": "com.microsoft.graphdataconnect.skillsfinder.replacesearchindex.job.ReplaceCurrentAzureSearchIndexJob",
                            "parameters": [
                                "--new-azure-search-index-name",
                                "@variables('employeesIndexName')",
                                "--application-id",
                                "@pipeline().globalParameters.gdc_app_registration_application_id",
                                "--directory-id",
                                "@pipeline().globalParameters.gdc_app_registration_directory_id",
                                "--adb-secret-scope-name",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--adb-sp-client-key-secret-name",
                                "[parameters('gdc-service.sp.adb.secret_name')]",
                                "--jdbc-hostname",
                                "@pipeline().globalParameters.gdc_azure_sql_server_name",
                                "--jdbc-port",
                                "1433",
                                "--jdbc-database",
                                "@pipeline().globalParameters.gdc_azure_sql_database",
                                "--key-vault-url",
                                "@pipeline().globalParameters.gdc_key_vault_url",
                                "--azure-search-url",
                                "@pipeline().globalParameters.gdc_azure_search_url",
                                "--azure-search-admin-key-name",
                                "gdc-search-service-admin-key",
                                "--log-analytics-workspace-id",
                                "@pipeline().globalParameters.gdc_log_analytics_workspace_id",
                                "--log-analytics-workspace-key-name",
                                "log-analytics-api-key",
                                "--jdbc-username-key-name",
                                "azure-sql-backend-user",
                                "--jdbc-password-key-name",
                                "azure-sql-backend-password",
                                "--use-msi-azure-sql-auth",
                                "@pipeline().globalParameters.gdc_azure_sql_msi_auth_enabled"
                            ],
                            "libraries": [
                                {
                                    "jar": "dbfs:/mnt/gdc-artifacts/replace-current-search-index.jar"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "databricks_linkedservice",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "SetEmployeesIndexName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "employeesIndexName",
                            "value": {
                                "value": "@concat(pipeline().globalParameters.gdc_azure_search_index_prefix,'-employees-', utcnow('yyyy-MM-dd-HH-mm-ss'))",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "variables": {
                    "employeesIndexName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "EmployeeProfile/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/databricks_linkedservice')]",
                "[concat(variables('factoryId'), '/datasets/EnrichedEmployeesForIndexing')]",
                "[concat(variables('factoryId'), '/datasets/AzureSearchEmployeeIndex')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/M365ManagerToBlob')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "copyM365ManagerToBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "Office365Source",
                                "allowedGroups": {
                                    "value": "@createArray(pipeline().globalParameters.gdc_employees_group_id)",
                                    "type": "Expression"
                                },
                                "outputColumns": [
                                    {
                                        "name": "accountEnabled"
                                    },
                                    {
                                        "name": "ageGroup"
                                    },
                                    {
                                        "name": "assignedLicenses"
                                    },
                                    {
                                        "name": "assignedPlans"
                                    },
                                    {
                                        "name": "businessPhones"
                                    },
                                    {
                                        "name": "city"
                                    },
                                    {
                                        "name": "companyName"
                                    },
                                    {
                                        "name": "consentProvidedForMinor"
                                    },
                                    {
                                        "name": "country"
                                    },
                                    {
                                        "name": "createdDateTime"
                                    },
                                    {
                                        "name": "department"
                                    },
                                    {
                                        "name": "displayName"
                                    },
                                    {
                                        "name": "givenName"
                                    },
                                    {
                                        "name": "id"
                                    },
                                    {
                                        "name": "imAddresses"
                                    },
                                    {
                                        "name": "jobTitle"
                                    },
                                    {
                                        "name": "legalAgeGroupClassification"
                                    },
                                    {
                                        "name": "mail"
                                    },
                                    {
                                        "name": "mailNickname"
                                    },
                                    {
                                        "name": "mobilePhone"
                                    },
                                    {
                                        "name": "officeLocation"
                                    },
                                    {
                                        "name": "onPremisesImmutableId"
                                    },
                                    {
                                        "name": "onPremisesLastSyncDateTime"
                                    },
                                    {
                                        "name": "onPremisesSecurityIdentifier"
                                    },
                                    {
                                        "name": "onPremisesSyncEnabled"
                                    },
                                    {
                                        "name": "passwordPolicies"
                                    },
                                    {
                                        "name": "postalCode"
                                    },
                                    {
                                        "name": "preferredLanguage"
                                    },
                                    {
                                        "name": "provisionedPlans"
                                    },
                                    {
                                        "name": "proxyAddresses"
                                    },
                                    {
                                        "name": "state"
                                    },
                                    {
                                        "name": "streetAddress"
                                    },
                                    {
                                        "name": "surname"
                                    },
                                    {
                                        "name": "usageLocation"
                                    },
                                    {
                                        "name": "userPrincipalName"
                                    },
                                    {
                                        "name": "userType"
                                    }
                                ]
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Info",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "blobstorage_linkedservice",
                                        "type": "LinkedServiceReference"
                                    },
                                    "path": {
                                        "value": "@concat('logs/End2EndEmployeeProfilePipeline/', pipeline().RunId)",
                                        "type": "Expression"
                                    }
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "M365_Manager",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "M365ManagerBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_employee_profiles_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "EmployeeProfile/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/M365_Manager')]",
                "[concat(variables('factoryId'), '/datasets/M365ManagerBlob')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/M365UserProfileToBlob')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "copyM365UserProfileToBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "Office365Source",
                                "allowedGroups": {
                                    "value": "@createArray(pipeline().globalParameters.gdc_employees_group_id)",
                                    "type": "Expression"
                                },
                                "outputColumns": [
                                    {
                                        "name": "aboutMe"
                                    },
                                    {
                                        "name": "accountEnabled"
                                    },
                                    {
                                        "name": "ageGroup"
                                    },
                                    {
                                        "name": "assignedLicenses"
                                    },
                                    {
                                        "name": "assignedPlans"
                                    },
                                    {
                                        "name": "birthday"
                                    },
                                    {
                                        "name": "businessPhones"
                                    },
                                    {
                                        "name": "city"
                                    },
                                    {
                                        "name": "companyName"
                                    },
                                    {
                                        "name": "consentProvidedForMinor"
                                    },
                                    {
                                        "name": "country"
                                    },
                                    {
                                        "name": "createdDateTime"
                                    },
                                    {
                                        "name": "department"
                                    },
                                    {
                                        "name": "displayName"
                                    },
                                    {
                                        "name": "givenName"
                                    },
                                    {
                                        "name": "hireDate"
                                    },
                                    {
                                        "name": "id"
                                    },
                                    {
                                        "name": "imAddresses"
                                    },
                                    {
                                        "name": "interests"
                                    },
                                    {
                                        "name": "jobTitle"
                                    },
                                    {
                                        "name": "legalAgeGroupClassification"
                                    },
                                    {
                                        "name": "mail"
                                    },
                                    {
                                        "name": "mailNickname"
                                    },
                                    {
                                        "name": "mobilePhone"
                                    },
                                    {
                                        "name": "mySite"
                                    },
                                    {
                                        "name": "officeLocation"
                                    },
                                    {
                                        "name": "onPremisesImmutableId"
                                    },
                                    {
                                        "name": "onPremisesLastSyncDateTime"
                                    },
                                    {
                                        "name": "onPremisesSecurityIdentifier"
                                    },
                                    {
                                        "name": "onPremisesSyncEnabled"
                                    },
                                    {
                                        "name": "passwordPolicies"
                                    },
                                    {
                                        "name": "pastProjects"
                                    },
                                    {
                                        "name": "postalCode"
                                    },
                                    {
                                        "name": "preferredLanguage"
                                    },
                                    {
                                        "name": "preferredName"
                                    },
                                    {
                                        "name": "provisionedPlans"
                                    },
                                    {
                                        "name": "proxyAddresses"
                                    },
                                    {
                                        "name": "responsibilities"
                                    },
                                    {
                                        "name": "schools"
                                    },
                                    {
                                        "name": "skills"
                                    },
                                    {
                                        "name": "state"
                                    },
                                    {
                                        "name": "streetAddress"
                                    },
                                    {
                                        "name": "surname"
                                    },
                                    {
                                        "name": "usageLocation"
                                    },
                                    {
                                        "name": "userPrincipalName"
                                    },
                                    {
                                        "name": "userType"
                                    }
                                ]
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Info",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "blobstorage_linkedservice",
                                        "type": "LinkedServiceReference"
                                    },
                                    "path": {
                                        "value": "@concat('logs/End2EndEmployeeProfilePipeline/', pipeline().RunId)",
                                        "type": "Expression"
                                    }
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "M365_User_Profile",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "M365UserProfileBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_employee_profiles_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "EmployeeProfile/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/M365_User_Profile')]",
                "[concat(variables('factoryId'), '/datasets/M365UserProfileBlob')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/SampleUserProfileToBlob')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SampleUserProfileToBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "BinaryReadSettings"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "validateDataConsistency": true,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Info",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "blobstorage_linkedservice",
                                        "type": "LinkedServiceReference"
                                    },
                                    "path": {
                                        "value": "@concat('logs/End2EndEmployeeProfilePipeline/', pipeline().RunId)",
                                        "type": "Expression"
                                    }
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SampleData_UserProfileBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": "sample-data"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "M365UserProfileBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_employee_profiles_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "EmployeeProfile/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SampleData_UserProfileBlob')]",
                "[concat(variables('factoryId'), '/datasets/M365UserProfileBlob')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/SimulatedManagerToBlob')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SimulatedManagerToBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "BinaryReadSettings"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "validateDataConsistency": true,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Info",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "blobstorage_linkedservice",
                                        "type": "LinkedServiceReference"
                                    },
                                    "path": {
                                        "value": "@concat('logs/End2EndEmployeeProfilePipeline/', pipeline().RunId)",
                                        "type": "Expression"
                                    }
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SampleData_ManagerBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": "simulated-data"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "M365ManagerBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_employee_profiles_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "EmployeeProfile/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/M365ManagerBlob')]",
                "[concat(variables('factoryId'), '/datasets/SampleData_ManagerBlob')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/SimulatedUserProfileToBlob')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SimulatedUserProfileToBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "BinaryReadSettings"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "validateDataConsistency": true,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Info",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "blobstorage_linkedservice",
                                        "type": "LinkedServiceReference"
                                    },
                                    "path": {
                                        "value": "@concat('logs/End2EndEmployeeProfilePipeline/', pipeline().RunId)",
                                        "type": "Expression"
                                    }
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SampleData_UserProfileBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": "simulated-data"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "M365UserProfileBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_employee_profiles_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "EmployeeProfile/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/M365UserProfileBlob')]",
                "[concat(variables('factoryId'), '/datasets/SampleData_UserProfileBlob')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/SampleManagerToBlob')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SampleManagerToBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "BinaryReadSettings"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "validateDataConsistency": true,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Info",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "blobstorage_linkedservice",
                                        "type": "LinkedServiceReference"
                                    },
                                    "path": {
                                        "value": "@concat('logs/End2EndEmployeeProfilePipeline/', pipeline().RunId)",
                                        "type": "Expression"
                                    }
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SampleData_ManagerBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": "sample-data"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "M365ManagerBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_employee_profiles_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "EmployeeProfile/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SampleData_ManagerBlob')]",
                "[concat(variables('factoryId'), '/datasets/M365ManagerBlob')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/End2EndEmployeeProfilePipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "buildEmployeeProfileAndExportToAzureSql",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "CopyM365EmployeeProfiles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "buildEmployeeProfileAndExportToAzureSql",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true
                        }
                    },
                    {
                        "name": "enrichEmployeeProfile",
                        "description": "Performs the enrichment process on the data from the given input path, then clears the output of previous runs and then writes the result of the current run.",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ImportHRDataIntoAzureSql",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "buildEmployeeProfileAndExportToAzureSql",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "enrichEmployeeProfile",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true
                        }
                    },
                    {
                        "name": "exportDataToAzureSearch",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "enrichEmployeeProfile",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "exportEmployeeToAzureSearch",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true
                        }
                    },
                    {
                        "name": "deleteOldM365ManagerBlobData",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "deleteOldM365ManagerBlobData",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true
                        }
                    },
                    {
                        "name": "deleteOldM365UserBlobData",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "deleteOldM365UserBlobData",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true
                        }
                    },
                    {
                        "name": "CopyM365EmployeeProfiles",
                        "type": "Switch",
                        "dependsOn": [
                            {
                                "activity": "deleteOldM365ManagerBlobData",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "deleteOldM365UserBlobData",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "on": {
                                "value": "@pipeline().globalParameters.gdc_data_ingestion_mode",
                                "type": "Expression"
                            },
                            "cases": [
                                {
                                    "value": "sample_mode",
                                    "activities": [
                                        {
                                            "name": "SampleUserProfileToBlob",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "SampleUserProfileToBlob",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true
                                            }
                                        },
                                        {
                                            "name": "SampleManagerToBlob",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "SampleManagerToBlob",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "production_mode",
                                    "activities": [
                                        {
                                            "name": "M365ManagerToBlob",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "M365ManagerToBlob",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true
                                            }
                                        },
                                        {
                                            "name": "M365UserProfileToBlob",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "M365UserProfileToBlob",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "simulated_mode",
                                    "activities": [
                                        {
                                            "name": "SimulatedUserProfileToBlob",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "SimulatedUserProfileToBlob",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true
                                            }
                                        },
                                        {
                                            "name": "SimulatedManagerToBlob",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "SimulatedManagerToBlob",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "ImportHRDataIntoAzureSql",
                        "type": "Switch",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "on": {
                                "value": "@pipeline().globalParameters.gdc_data_ingestion_mode",
                                "type": "Expression"
                            },
                            "cases": [
                                {
                                    "value": "sample_mode",
                                    "activities": [
                                        {
                                            "name": "ImportSampleHRDataIntoSql",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "ImportHRDataIntoSql",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "inputContainer": "sample-data",
                                                    "inputFolderPath": "hr_data",
                                                    "storageAccountName": {
                                                        "value": "@pipeline().globalParameters.gdc_azbs_demodata_storage_account",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "production_mode",
                                    "activities": [
                                        {
                                            "name": "ImportHRDataIntoSql",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "ImportHRDataIntoSql",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "inputContainer": "production-data",
                                                    "inputFolderPath": "hr_data",
                                                    "storageAccountName": {
                                                        "value": "@pipeline().globalParameters.gdc_azbs_demodata_storage_account",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "simulated_mode",
                                    "activities": [
                                        {
                                            "name": "ImportSimulatedHRDataIntoSql",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "ImportHRDataIntoSql",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "inputContainer": "simulated-data",
                                                    "inputFolderPath": "hr_data",
                                                    "storageAccountName": {
                                                        "value": "@pipeline().globalParameters.gdc_azbs_demodata_storage_account",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "folder": {
                    "name": "EmployeeProfile"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/deleteOldM365UserBlobData')]",
                "[concat(variables('factoryId'), '/pipelines/deleteOldM365ManagerBlobData')]",
                "[concat(variables('factoryId'), '/pipelines/buildEmployeeProfileAndExportToAzureSql')]",
                "[concat(variables('factoryId'), '/pipelines/enrichEmployeeProfile')]",
                "[concat(variables('factoryId'), '/pipelines/exportEmployeeToAzureSearch')]",
                "[concat(variables('factoryId'), '/pipelines/M365ManagerToBlob')]",
                "[concat(variables('factoryId'), '/pipelines/M365UserProfileToBlob')]",
                "[concat(variables('factoryId'), '/pipelines/SimulatedManagerToBlob')]",
                "[concat(variables('factoryId'), '/pipelines/SimulatedUserProfileToBlob')]",
                "[concat(variables('factoryId'), '/pipelines/SampleManagerToBlob')]",
                "[concat(variables('factoryId'), '/pipelines/SampleUserProfileToBlob')]",
                "[concat(variables('factoryId'), '/pipelines/ImportHRDataIntoSql')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/latestReplyExtractionAndDeduplication')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Extracts latest reply from each emails thread and performs deduplication of emails so that only one instance is preserved per internetMessageId",
                "activities": [
                    {
                        "name": "latestReplyExtractionAndDeduplication",
                        "type": "DatabricksSparkJar",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "mainClassName": "com.microsoft.graphdataconnect.skillsfinder.replyextractor.job.Runner",
                            "parameters": [
                                "--application-id",
                                "@pipeline().globalParameters.gdc_app_registration_application_id",
                                "--directory-id",
                                "@pipeline().globalParameters.gdc_app_registration_directory_id",
                                "--adb-secret-scope-name",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--adb-sp-client-key-secret-name",
                                "[parameters('gdc-service.sp.adb.secret_name')]",
                                "--storage-account-name",
                                "@pipeline().globalParameters.gdc_azbs_storage_account",
                                "--input-container",
                                "@pipeline().globalParameters.gdc_emails_azbs_container",
                                "--input-folder-path",
                                "@{concat('m365_emails/', pipeline().parameters.batchTimeBasedSubpath)}",
                                "--output-container",
                                "@pipeline().globalParameters.gdc_emails_azbs_container",
                                "--output-folder-path",
                                "@{concat('deduplicated/', pipeline().parameters.batchTimeBasedSubpath)}",
                                "--log-analytics-workspace-id",
                                "@pipeline().globalParameters.gdc_log_analytics_workspace_id",
                                "--log-analytics-workspace-key-name",
                                "log-analytics-api-key",
                                "--key-vault-url",
                                "@pipeline().globalParameters.gdc_key_vault_url"
                            ],
                            "libraries": [
                                {
                                    "jar": "dbfs:/mnt/gdc-artifacts/latest-reply-extractor.jar"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "databricks_linkedservice",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "batchTimeBasedSubpath": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "M365Emails/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/databricks_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/M365EmailsToBlob')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "copyM365EmailsToBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "Office365Source",
                                "dateFilterColumn": "ReceivedDateTime",
                                "startTime": {
                                    "value": "@pipeline().parameters.batchStartTime",
                                    "type": "Expression"
                                },
                                "endTime": {
                                    "value": "@pipeline().parameters.batchEndTime",
                                    "type": "Expression"
                                },
                                "allowedGroups": {
                                    "value": "@createArray(pipeline().globalParameters.gdc_employees_group_id)",
                                    "type": "Expression"
                                },
                                "outputColumns": [
                                    {
                                        "name": "ReceivedDateTime"
                                    },
                                    {
                                        "name": "SentDateTime"
                                    },
                                    {
                                        "name": "HasAttachments"
                                    },
                                    {
                                        "name": "InternetMessageId"
                                    },
                                    {
                                        "name": "Subject"
                                    },
                                    {
                                        "name": "Importance"
                                    },
                                    {
                                        "name": "ParentFolderId"
                                    },
                                    {
                                        "name": "Sender"
                                    },
                                    {
                                        "name": "From"
                                    },
                                    {
                                        "name": "ToRecipients"
                                    },
                                    {
                                        "name": "CcRecipients"
                                    },
                                    {
                                        "name": "BccRecipients"
                                    },
                                    {
                                        "name": "ReplyTo"
                                    },
                                    {
                                        "name": "ConversationId"
                                    },
                                    {
                                        "name": "UniqueBody"
                                    },
                                    {
                                        "name": "IsDeliveryReceiptRequested"
                                    },
                                    {
                                        "name": "IsReadReceiptRequested"
                                    },
                                    {
                                        "name": "IsRead"
                                    },
                                    {
                                        "name": "IsDraft"
                                    },
                                    {
                                        "name": "WebLink"
                                    },
                                    {
                                        "name": "CreatedDateTime"
                                    },
                                    {
                                        "name": "LastModifiedDateTime"
                                    },
                                    {
                                        "name": "ChangeKey"
                                    },
                                    {
                                        "name": "Categories"
                                    },
                                    {
                                        "name": "Id"
                                    }
                                ]
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "validateDataConsistency": true,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Info",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "blobstorage_linkedservice",
                                        "type": "LinkedServiceReference"
                                    },
                                    "path": {
                                        "value": "@concat('logs/End2EndEmailsPipeline/', pipeline().RunId)",
                                        "type": "Expression"
                                    }
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "M365_Emails",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "M365EmailsBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "batchTimeBasedSubpath": {
                                        "value": "@pipeline().parameters.batchTimeBasedSubpath",
                                        "type": "Expression"
                                    },
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_emails_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "parameters": {
                    "batchStartTime": {
                        "type": "string"
                    },
                    "batchEndTime": {
                        "type": "string"
                    },
                    "batchTimeBasedSubpath": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "M365Emails/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/M365_Emails')]",
                "[concat(variables('factoryId'), '/datasets/M365EmailsBlob')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/SampleEmailToBlob')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SampleEmailToBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "BinaryReadSettings"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "validateDataConsistency": true,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Info",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "blobstorage_linkedservice",
                                        "type": "LinkedServiceReference"
                                    },
                                    "path": {
                                        "value": "@concat('logs/End2EndEmailsPipeline/', pipeline().RunId)",
                                        "type": "Expression"
                                    }
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SampleData_EmailBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": "sample-data"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "M365EmailsBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "batchTimeBasedSubpath": {
                                        "value": "@pipeline().parameters.batchTimeBasedSubpath",
                                        "type": "Expression"
                                    },
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_emails_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "parameters": {
                    "batchStartTime": {
                        "type": "string"
                    },
                    "batchEndTime": {
                        "type": "string"
                    },
                    "batchTimeBasedSubpath": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "M365Emails/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SampleData_EmailBlob')]",
                "[concat(variables('factoryId'), '/datasets/M365EmailsBlob')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/SimulatedEmailToBlob')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SimulatedEmailToBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "BinaryReadSettings"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "validateDataConsistency": true,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Info",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "blobstorage_linkedservice",
                                        "type": "LinkedServiceReference"
                                    },
                                    "path": {
                                        "value": "@concat('logs/End2EndEmailsPipeline/', pipeline().RunId)",
                                        "type": "Expression"
                                    }
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SampleData_EmailBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": "simulated-data"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "M365EmailsBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "batchTimeBasedSubpath": {
                                        "value": "@pipeline().parameters.batchTimeBasedSubpath",
                                        "type": "Expression"
                                    },
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_emails_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "parameters": {
                    "batchTimeBasedSubpath": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "M365Emails/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SampleData_EmailBlob')]",
                "[concat(variables('factoryId'), '/datasets/M365EmailsBlob')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/End2EndEmailsPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "latestReplyExtractionAndDeduplication",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "IngestionModeSwitch",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "latestReplyExtractionAndDeduplication",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "batchTimeBasedSubpath": {
                                    "value": "@variables('batchTimeBasedSubpath')",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "emailEnrichment",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "latestReplyExtractionAndDeduplication",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "emailEnrichment",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "batchTimeBasedSubpath": {
                                    "value": "@variables('batchTimeBasedSubpath')",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "exportEmailsToAzureSearch",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "emailEnrichment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "exportEmailsToAzureSearch",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "batchTimeBasedSubpath": {
                                    "value": "@variables('batchTimeBasedSubpath')",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Set batchDateTime",
                        "description": "Extract the UTC date and time corresponding to the current batch of emails being processed",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "batchDateTime",
                            "value": {
                                "value": "@{formatDateTime(pipeline().parameters.batchEndTime,'yyyy-MM-ddTHH-mm-ssZ')}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set batchMonth",
                        "description": "Extract the month corresponding to the current batch of emails being processed",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "batchMonth",
                            "value": {
                                "value": "@{formatDateTime(pipeline().parameters.batchEndTime,'MM')}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set batchYear",
                        "description": "Extract the year corresponding to the current batch of emails being processed",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "batchYear",
                            "value": {
                                "value": "@{formatDateTime(pipeline().parameters.batchEndTime,'yyyy')}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set batchTimeBasedSubpath",
                        "description": "Build the structure of a folder hierarchy  that is specific to the time window of the current batch. This path component will be reused relative to various parent folders, to allow passing the data specific to a time window between pipeline stages.",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set batchYear",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set batchMonth",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set batchDateTime",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "batchTimeBasedSubpath",
                            "value": {
                                "value": "@concat(variables('batchYear'), '/', variables('batchMonth'), '/', variables('batchDateTime'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "IngestionModeSwitch",
                        "type": "Switch",
                        "dependsOn": [
                            {
                                "activity": "Set batchTimeBasedSubpath",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "on": {
                                "value": "@pipeline().globalParameters.gdc_data_ingestion_mode",
                                "type": "Expression"
                            },
                            "cases": [
                                {
                                    "value": "sample_mode",
                                    "activities": [
                                        {
                                            "name": "SampleEmailToBlob",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "SampleEmailToBlob",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "batchStartTime": {
                                                        "value": "@pipeline().parameters.batchStartTime",
                                                        "type": "Expression"
                                                    },
                                                    "batchEndTime": {
                                                        "value": "@pipeline().parameters.batchEndTime",
                                                        "type": "Expression"
                                                    },
                                                    "batchTimeBasedSubpath": {
                                                        "value": "@variables('batchTimeBasedSubpath')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "production_mode",
                                    "activities": [
                                        {
                                            "name": "M365EmailsToBlob",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "M365EmailsToBlob",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "batchStartTime": {
                                                        "value": "@pipeline().parameters.batchStartTime",
                                                        "type": "Expression"
                                                    },
                                                    "batchEndTime": {
                                                        "value": "@pipeline().parameters.batchEndTime",
                                                        "type": "Expression"
                                                    },
                                                    "batchTimeBasedSubpath": {
                                                        "value": "@variables('batchTimeBasedSubpath')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "simulated_mode",
                                    "activities": [
                                        {
                                            "name": "SimulatedEmailToBlob",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "SimulatedEmailToBlob",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "batchTimeBasedSubpath": {
                                                        "value": "@variables('batchTimeBasedSubpath')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "batchStartTime": {
                        "type": "string",
                        "defaultValue": "[parameters('pipeline_start_time')]"
                    },
                    "batchEndTime": {
                        "type": "string",
                        "defaultValue": "[parameters('email_pipeline_default_end_time')]"
                    }
                },
                "variables": {
                    "batchYear": {
                        "type": "String"
                    },
                    "batchMonth": {
                        "type": "String"
                    },
                    "batchDateTime": {
                        "type": "String"
                    },
                    "batchTimeBasedSubpath": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "M365Emails"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/M365EmailsToBlob')]",
                "[concat(variables('factoryId'), '/pipelines/SampleEmailToBlob')]",
                "[concat(variables('factoryId'), '/pipelines/SimulatedEmailToBlob')]",
                "[concat(variables('factoryId'), '/pipelines/latestReplyExtractionAndDeduplication')]",
                "[concat(variables('factoryId'), '/pipelines/emailEnrichment')]",
                "[concat(variables('factoryId'), '/pipelines/exportEmailsToAzureSearch')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/End2EndCleanup')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "CleanupAzureSearchAndAzureSql",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "CleanupAzureSearchAndAzureSql",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "CleanupBlobStorageData",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "CleanupBlobStorageData",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "folder": {
                    "name": "Cleanup"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CleanupAzureSearchAndAzureSql')]",
                "[concat(variables('factoryId'), '/pipelines/CleanupBlobStorageData')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/CleanupAzureSearchAndAzureSql')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "CleanupAzureSearchAndAzureSql",
                        "type": "DatabricksSparkJar",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "mainClassName": "com.microsoft.graphdataconnect.skillsfinder.cleanup.job.CleanupJob",
                            "parameters": [
                                "--application-id",
                                "@pipeline().globalParameters.gdc_app_registration_application_id",
                                "--directory-id",
                                "@pipeline().globalParameters.gdc_app_registration_directory_id",
                                "--adb-sp-client-key-secret-name",
                                "gdc-service-principal-secret",
                                "--adb-secret-scope-name",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--jdbc-hostname",
                                "@pipeline().globalParameters.gdc_azure_sql_server_name",
                                "--jdbc-port",
                                "1433",
                                "--jdbc-database",
                                "@pipeline().globalParameters.gdc_azure_sql_database",
                                "--key-vault-url",
                                "@pipeline().globalParameters.gdc_key_vault_url",
                                "--azure-search-url",
                                "@pipeline().globalParameters.gdc_azure_search_url",
                                "--azure-search-admin-key-name",
                                "gdc-search-service-admin-key",
                                "--log-analytics-workspace-id",
                                "@pipeline().globalParameters.gdc_log_analytics_workspace_id",
                                "--log-analytics-workspace-key-name",
                                "log-analytics-api-key",
                                "--emails-index-name",
                                "@concat(pipeline().globalParameters.gdc_azure_search_index_prefix,'-emails')",
                                "--jdbc-username-key-name",
                                "azure-sql-backend-user",
                                "--jdbc-password-key-name",
                                "azure-sql-backend-password",
                                "--use-msi-azure-sql-auth",
                                "@pipeline().globalParameters.gdc_azure_sql_msi_auth_enabled"
                            ],
                            "libraries": [
                                {
                                    "jar": "dbfs:/mnt/gdc-artifacts/cleanup-jgraph.jar"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "databricks_linkedservice",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "createAzSearchEmailIndex",
                        "type": "DatabricksSparkPython",
                        "dependsOn": [
                            {
                                "activity": "CleanupAzureSearchAndAzureSql",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pythonFile": "dbfs:/mnt/gdc-artifacts/create_azure_search_index.py",
                            "parameters": [
                                "--new-azure-search-index-name",
                                "@concat(pipeline().globalParameters.gdc_azure_search_index_prefix,'-emails')",
                                "--azure-search-endpoint",
                                "@pipeline().globalParameters.gdc_azure_search_url",
                                "--index-definition-storage-account-name",
                                "@pipeline().globalParameters.gdc_azbs_storage_account",
                                "--index-definition-container-name",
                                "@pipeline().globalParameters.gdc_deployment_artifacts_azbs_container",
                                "--index-definition-file-path",
                                "schema/indexes/azure_mails_index_definition.json",
                                "--application-id",
                                "@pipeline().globalParameters.gdc_app_registration_application_id",
                                "--directory-id",
                                "@pipeline().globalParameters.gdc_app_registration_directory_id",
                                "--adb-secret-scope-name",
                                "@pipeline().globalParameters.gdc_adb_secret_scope",
                                "--adb-sp-client-key-secret-name",
                                "gdc-service-principal-secret",
                                "--log-analytics-workspace-id",
                                "@pipeline().globalParameters.gdc_log_analytics_workspace_id",
                                "--log-analytics-workspace-key-name",
                                "log-analytics-api-key",
                                "--key-vault-url",
                                "@pipeline().globalParameters.gdc_key_vault_url",
                                "--azure-search-admin-key-name",
                                "gdc-search-service-admin-key"
                            ],
                            "libraries": [
                                {
                                    "pypi": {
                                        "package": "azure-identity==1.4.1"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "azure-keyvault-secrets==4.2.0"
                                    }
                                },
                                {
                                    "pypi": {
                                        "package": "azure-storage-blob==12.7.0"
                                    }
                                },
                                {
                                    "whl": "[concat('dbfs:/mnt/gdc-artifacts/',parameters('pygraph_utils_library.name'))]"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "databricks_linkedservice",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "folder": {
                    "name": "Cleanup/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/databricks_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/CleanupBlobStorageData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "DeleteM365EmailsBlobData",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "M365EmailsParentBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_emails_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "logStorageSettings": {
                                "linkedServiceName": {
                                    "referenceName": "blobstorage_via_sp_linkedservice",
                                    "type": "LinkedServiceReference"
                                },
                                "path": {
                                    "value": "@concat('logs/End2EndCleanup/', pipeline().RunId, '/cleanup-logs/', pipeline().Pipeline)",
                                    "type": "Expression"
                                }
                            },
                            "enableLogging": true,
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "DeleteDeduplicatedEmailsBlobData",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "DeleteM365EmailsBlobData",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DeduplicatedEmailsParentBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_emails_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "logStorageSettings": {
                                "linkedServiceName": {
                                    "referenceName": "blobstorage_via_sp_linkedservice",
                                    "type": "LinkedServiceReference"
                                },
                                "path": {
                                    "value": "@concat('logs/End2EndCleanup/', pipeline().RunId, '/cleanup-logs/', pipeline().Pipeline)",
                                    "type": "Expression"
                                }
                            },
                            "enableLogging": true,
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "DeleteEnrichedEmailsBlobData",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "DeleteDeduplicatedEmailsBlobData",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "EnrichedEmailsParentBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_emails_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "logStorageSettings": {
                                "linkedServiceName": {
                                    "referenceName": "blobstorage_via_sp_linkedservice",
                                    "type": "LinkedServiceReference"
                                },
                                "path": {
                                    "value": "@concat('logs/End2EndCleanup/', pipeline().RunId, '/cleanup-logs/', pipeline().Pipeline)",
                                    "type": "Expression"
                                }
                            },
                            "enableLogging": true,
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "deleteOldM365ManagerBlobData",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "deleteOldM365ManagerBlobData",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "deleteOldM365UserBlobData",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "deleteOldM365ManagerBlobData",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "deleteOldM365UserBlobData",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "DeleteEnrichedEmployeeBlobData",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "deleteOldM365UserBlobData",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "EnrichedEmployeesForIndexing",
                                "type": "DatasetReference",
                                "parameters": {
                                    "azbsContainer": {
                                        "value": "@pipeline().globalParameters.gdc_employee_profiles_azbs_container",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "logStorageSettings": {
                                "linkedServiceName": {
                                    "referenceName": "blobstorage_via_sp_linkedservice",
                                    "type": "LinkedServiceReference"
                                },
                                "path": {
                                    "value": "@concat('logs/End2EndCleanup/', pipeline().RunId, '/cleanup-logs/', pipeline().Pipeline)",
                                    "type": "Expression"
                                }
                            },
                            "enableLogging": true,
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "Success",
                        "description": "The delete stages fail if the blob files they are trying to delete don't exist, but we don't want the whole pipeline to fail if there are no files to be deleted. This Wait Activity is used only to make the  whole pipeline succeed even if one of the delete stages fails.",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "DeleteEnrichedEmployeeBlobData",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "DeleteEnrichedEmailsBlobData",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 1
                        }
                    }
                ],
                "folder": {
                    "name": "Cleanup/Components"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/M365EmailsParentBlob')]",
                "[concat(variables('factoryId'), '/datasets/DeduplicatedEmailsParentBlob')]",
                "[concat(variables('factoryId'), '/datasets/EnrichedEmailsParentBlob')]",
                "[concat(variables('factoryId'), '/pipelines/deleteOldM365ManagerBlobData')]",
                "[concat(variables('factoryId'), '/pipelines/deleteOldM365UserBlobData')]",
                "[concat(variables('factoryId'), '/datasets/EnrichedEmployeesForIndexing')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_via_sp_linkedservice')]",
                "[concat(variables('factoryId'), '/linkedServices/blobstorage_linkedservice')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/emails_pipeline_trigger')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "End2EndEmailsPipeline",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "batchStartTime": "@trigger().outputs.windowStartTime",
                        "batchEndTime": "@trigger().outputs.windowEndTime"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "[parameters('pipeline_start_time')]",
                    "delay": "00:10:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "count": 3,
                        "intervalInSeconds": 7200
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/End2EndEmailsPipeline')]"
            ]
        },
        {
            "condition": "[not(equals(variables('further_past_emails_trigger_time_span'),0))]",
            "name": "[concat(parameters('adf.name'), '/emails_pipeline_backfill_further_past_trigger')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "End2EndEmailsPipeline",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "batchStartTime": "@trigger().outputs.windowStartTime",
                        "batchEndTime": "@trigger().outputs.windowEndTime"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "[dateTimeAdd(parameters('pipeline_start_time'), concat('-P',string(variables('further_past_emails_trigger_time_span')) ,'D'))]",
                    "endTime": "[dateTimeAdd(parameters('pipeline_start_time'), '-P7D')]",
                    "delay": "00:00:00",
                    "maxConcurrency": 10,
                    "retryPolicy": {
                        "count": 3,
                        "intervalInSeconds": 86400
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/End2EndEmailsPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/emails_pipeline_backfill_past_week_trigger')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "End2EndEmailsPipeline",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "batchStartTime": "@trigger().outputs.windowStartTime",
                        "batchEndTime": "@trigger().outputs.windowEndTime"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "[dateTimeAdd(parameters('pipeline_start_time'), concat('-P',string(variables('past_week_emails_trigger_time_span')) ,'D'))]",
                    "endTime": "[parameters('pipeline_start_time')]",
                    "delay": "00:00:00",
                    "maxConcurrency": 4,
                    "retryPolicy": {
                        "count": 3,
                        "intervalInSeconds": 86400
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/End2EndEmailsPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/employee_profiles_pipeline_backfill_trigger')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "End2EndEmployeeProfilePipeline",
                        "type": "PipelineReference"
                    },
                    "parameters": {}
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "[dateTimeAdd(parameters('pipeline_start_time'), '-P1D')]",
                    "endTime": "[parameters('pipeline_start_time')]",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "count": 3,
                        "intervalInSeconds": 86400
                    },
                    "dependsOn": [                        {
                        "type": "TumblingWindowTriggerDependencyReference",
                        "size": "1.00:00:00",
                        "offset": "0.00:00:00",
                        "referenceTrigger": {
                            "referenceName": "airtable_pipeline_backfill_trigger",
                            "type": "TriggerReference"
                        }
                    }]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/End2EndEmployeeProfilePipeline')]",
                "[concat(variables('factoryId'), '/triggers/airtable_pipeline_backfill_trigger')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/employee_profiles_pipeline_trigger')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "End2EndEmployeeProfilePipeline",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "[dateTimeAdd(parameters('pipeline_start_time'), '-P7D')]",
                        "timeZone": "UTC",
                        "schedule": {
                            "minutes": [
                                0
                            ],
                            "hours": [
                                8
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/End2EndEmployeeProfilePipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/inferred_roles_pipeline_backfill_trigger')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "End2EndMailsToRolesPipeline",
                        "type": "PipelineReference"
                    },
                    "parameters": {}
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "[dateTimeAdd(parameters('pipeline_start_time'), '-P1D')]",
                    "endTime": "[parameters('pipeline_start_time')]",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "count": 3,
                        "intervalInSeconds": 86400
                    },
                    "dependsOn": [
                        {
                            "type": "TumblingWindowTriggerDependencyReference",
                            "size": "7.00:00:00",
                            "offset": "-6.00:00:00",
                            "referenceTrigger": {
                                "referenceName": "emails_pipeline_backfill_past_week_trigger",
                                "type": "TriggerReference"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/End2EndMailsToRolesPipeline')]",
                "[concat(variables('factoryId'), '/triggers/emails_pipeline_backfill_past_week_trigger')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/inferred_roles_pipeline_trigger')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "End2EndMailsToRolesPipeline",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "[dateTimeAdd(parameters('pipeline_start_time'), '-P7D')]",
                        "timeZone": "UTC",
                        "schedule": {
                            "minutes": [
                                0
                            ],
                            "hours": [
                                10
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/End2EndMailsToRolesPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/airtable_pipeline_backfill_trigger')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "AirtableToHRDataPipeline",
                        "type": "PipelineReference"
                    },
                    "parameters": {}
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "[dateTimeAdd(parameters('pipeline_start_time'), '-P1D')]",
                    "endTime": "[parameters('pipeline_start_time')]",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "count": 3,
                        "intervalInSeconds": 86400
                    },
                    "dependsOn": []
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/AirtableToHRDataPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('adf.name'), '/airtable_pipeline_trigger')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "AirtableToHRDataPipeline",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "[dateTimeAdd(parameters('pipeline_start_time'), '-P1D')]",
                        "timeZone": "UTC",
                        "schedule": {
                            "minutes": [
                                30
                            ],
                            "hours": [
                                5
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/AirtableToHRDataPipeline')]"
            ]
        }
    ]
}